; Démarrer un nouveau pool nommé 'www'.
; la variable $pool peut être utilisée dans n'importe quelle directive et sera remplacée par 
; le nom du pool ('www' ici)
[www]
; Préfixe par pool
; Il ne s'applique qu'aux directives suivantes :
; - 'access.log'
; - 'slowlog'
; - 'listen' (unixsocket)
; - 'chroot'
; - 'chdir'
; - 'php_values' ; - 'php_admin_values'
; - 'php_admin_values'
; S'il n'est pas défini, le préfixe global (ou /usr) s'applique à la place.
; Note : Cette directive peut également être relative au préfixe global.
; Valeur par défaut : none
; préfixe = /path/to/pools/$pool

; Utilisateur Unix/groupe de processus
; Note : L'utilisateur est obligatoire. Si le groupe n'est pas défini, le groupe de l'utilisateur par défaut
; sera utilisé.
user = www-data
group = www-data
listen.owner = www-data
listen.group = www-data
clear_env = no

; L'adresse sur laquelle accepter les requêtes FastCGI.
; Les syntaxes valides sont :
; 'ip.add.re.ss:port' - pour écouter sur une socket TCP une adresse IPv4 spécifique sur un port spécifique
; '[ip:6:addr:ess]:port' - pour écouter sur une socket TCP une adresse IPv6 spécifique sur un port spécifique
; 'port' - pour écouter sur une socket TCP toutes les adresses
; (IPv6 et IPv4) sur un port spécifique ;
; '/path/to/unix/socket' - pour écouter sur une socket unix.
; Remarque : cette valeur est obligatoire.
listen = wordpress:9000
; Définir le backlog de listen(2).
; Valeur par défaut : 511 (-1 sous FreeBSD et OpenBSD)
; listen.backlog = 511

; Définit les permissions pour le socket unix, s'il est utilisé. Sous Linux, les permissions de lecture/écriture
; doivent être définies pour permettre les connexions à partir d'un serveur web. Beaucoup de systèmes dérivés 
; de BSD autorisent les connexions sans tenir compte des permissions.
; systèmes dérivés de BSD autorisent les connexions quelles que soient les permissions. Le propriétaire
; et le groupe peuvent être spécifiés soit par leur nom, soit par leur ID numérique.
; Valeurs par défaut : l'utilisateur et le groupe sont définis en tant qu'utilisateur ; courant
; le mode est fixé à 0660
pm = dynamic
; Le nombre de processus enfants à créer lorsque pm est défini sur 'static' et le nombre 
; maximum de processus enfants lorsque pm est défini sur 'dynamic' ou 'ondemand'.
; Cette valeur fixe la limite du nombre de requêtes simultanées qui seront
; servies. Equivalent à la directive ApacheMaxClients avec mpm_prefork.
; Equivalent à la variable d'environnement PHP_FCGI_CHILDREN dans la version originale de PHP
; CGI. Les valeurs par défaut ci-dessous sont basées sur un serveur sans beaucoup de ressources.
; n'oubliez pas d'adapter pm.* à vos besoins.
; Note : Utilisé lorsque pm est réglé sur 'static', 'dynamic' ou 'ondemand'
; Note : Cette valeur est obligatoire.

pm.max_children = 5

; Le nombre de processus enfants créés au démarrage.
; Note : Utilisé uniquement lorsque pm est défini sur 'dynamic'
; Valeur par défaut : (min_spare_servers + max_spare_servers) / 2

pm.start_servers = 2
; Le nombre minimum désiré de processus serveur inactifs.
; Note : Utilisé uniquement lorsque pm est défini sur "dynamic
; Note : obligatoire lorsque pm est défini sur "dynamic".

pm.min_spare_servers = 1

; Le nombre maximum souhaité de processus serveur inactifs.
; Note : Utilisé uniquement lorsque pm est défini sur "dynamic
; Note : obligatoire lorsque pm est défini sur "dynamic".

pm.max_spare_servers = 3